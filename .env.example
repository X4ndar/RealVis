# =============================================================================
# RealVis 5 FastAPI Backend Configuration
# =============================================================================
# Copy this file to .env and modify the values for your deployment
# This file contains all configurable options for the API-first backend

# =============================================================================
# üîê API SECURITY CONFIGURATION
# =============================================================================

# API Key for authentication
# - Set to a secure random string to enable authentication
# - Leave empty or comment out to disable authentication (for testing)
# - Generate secure key: openssl rand -hex 32
# - For production: ALWAYS use a strong API key
API_KEY=your-secure-api-key-here

# =============================================================================
# üåê SERVER CONFIGURATION
# =============================================================================

# Server host binding
# - 0.0.0.0: Accept connections from any IP (required for RunPod/remote access)
# - 127.0.0.1: Only accept local connections
HOST=0.0.0.0

# Server port
# - Default: 8000 (RunPod proxy maps this automatically)
# - Change if you have port conflicts
PORT=8000

# Deployment environment
# - production: Optimized for live deployment
# - development: Extra logging and debugging features
# - testing: Minimal logging for automated tests
ENVIRONMENT=production

# Debug mode
# - true: Enable hot reloading and detailed error messages
# - false: Production mode with minimal debug info
DEBUG=false

# =============================================================================
# üåç CORS (Cross-Origin Resource Sharing) CONFIGURATION
# =============================================================================
# Required for React frontends running on different domains/ports

# Allowed origins (comma-separated, no spaces)
# - *: Allow all origins (convenient but less secure)
# - Specific URLs: https://myapp.com,https://myapp.vercel.app
# - Local development: http://localhost:3000,http://localhost:5173
# - Production example: https://yourdomain.com,https://www.yourdomain.com
ALLOWED_ORIGINS=*

# Allowed HTTP methods (comma-separated)
# - Standard REST API methods
# - OPTIONS is required for CORS preflight requests
ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Allowed headers (comma-separated or * for all)
# - *: Allow all headers (most flexible)
# - Specific: Content-Type,Authorization,X-API-Key
ALLOWED_HEADERS=*

# Allow credentials (cookies, authorization headers)
# - true: Required if your frontend sends authentication
# - false: More restrictive security
ALLOW_CREDENTIALS=true

# =============================================================================
# ü§ñ AI MODEL CONFIGURATION
# =============================================================================

# RealVis 5 model repository on Hugging Face
# - Default: GraydientPlatformAPI/realvis5light-xl (photorealistic)
# - Alternative: You can switch to other compatible models
REALVIS_MODEL=GraydientPlatformAPI/realvis5light-xl

# Inpainting model repository
# - Default: stabilityai/stable-diffusion-2-inpainting
# - Used for image editing/inpainting features
INPAINTING_MODEL=stabilityai/stable-diffusion-2-inpainting

# Model cache directory (optional)
# - If not set, uses default HuggingFace cache (~/.cache/huggingface/)
# - Useful for custom cache locations or shared storage
# MODEL_CACHE_DIR=/path/to/model/cache

# =============================================================================
# ‚öôÔ∏è GENERATION DEFAULTS & LIMITS
# =============================================================================

# Default inference steps for text-to-image generation
# - Lower: Faster but potentially lower quality (15-20)
# - Higher: Slower but better quality (30-40)
# - RealVis 5 optimal: 25
DEFAULT_STEPS=25

# Default guidance scale for RealVis 5
# - RealVis 5 works best with lower values than SDXL
# - Range: 1.5-3.0 (higher = more prompt adherence)
# - Recommended: 2.0 for realistic results
DEFAULT_GUIDANCE_SCALE=2.0

# Default image dimensions
# - 1024x1024: Best quality for RealVis 5
# - 768x768: Good balance of speed and quality
# - 512x512: Fastest generation
DEFAULT_WIDTH=1024
DEFAULT_HEIGHT=1024

# Default negative prompt (what to avoid in images)
# - Helps improve image quality by excluding unwanted elements
# - RealVis 5 optimized negative prompts
DEFAULT_NEGATIVE_PROMPT=cartoon, anime, painted, artificial, low quality, blurry, distorted

# Maximum limits (security/performance)
MAX_STEPS=50
MAX_WIDTH=1536
MAX_HEIGHT=1536
REQUEST_TIMEOUT=300
MAX_UPLOAD_SIZE=10

# =============================================================================
# ‚ö° GPU PERFORMANCE OPTIMIZATIONS
# =============================================================================

# Enable all GPU optimizations
# - true: Maximum performance (recommended)
# - false: Disable optimizations (for troubleshooting)
ENABLE_GPU_OPTIMIZATIONS=true

# xFormers memory efficient attention
# - Significantly reduces GPU memory usage
# - Enables larger batch sizes and higher resolutions
ENABLE_XFORMERS=true

# Model CPU offload
# - Moves parts of the model to CPU when not in use
# - Reduces GPU memory usage
ENABLE_CPU_OFFLOAD=true

# Attention slicing
# - Processes attention in smaller chunks
# - Reduces memory usage for high-resolution images
ENABLE_ATTENTION_SLICING=true

# VAE slicing
# - Processes VAE (image decoder) in slices
# - Helps with high-resolution image generation
ENABLE_VAE_SLICING=true

# =============================================================================
# üìù LOGGING CONFIGURATION
# =============================================================================

# Log level (controls verbosity)
# - DEBUG: Very detailed logs (development)
# - INFO: Standard operational logs (recommended)
# - WARNING: Only warnings and errors
# - ERROR: Only errors and critical issues
LOG_LEVEL=INFO

# Log format template
# - Includes timestamp, logger name, level, and message
# - Modify for custom log formats
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# GPU memory logging
# - true: Log GPU memory usage during operations
# - false: Disable GPU memory logs
LOG_GPU_MEMORY=true

# =============================================================================
# üö¶ RATE LIMITING (Future Enhancement)
# =============================================================================
# Note: These are prepared for future rate limiting features

# Enable rate limiting
ENABLE_RATE_LIMITING=false

# Rate limits
RATE_LIMIT_PER_MINUTE=10
RATE_LIMIT_PER_HOUR=100

# =============================================================================
# üîó DEPLOYMENT URLS & FRONTEND INTEGRATION
# =============================================================================

# Your RunPod API base URL
# - Replace with your actual RunPod proxy URL
# - Used for API documentation and frontend integration
API_BASE_URL=""

# Alternative deployment examples:
# Local development:
# API_BASE_URL=http://localhost:8000

# Custom domain:
# API_BASE_URL=https://api.yourdomain.com

# Ngrok tunnel (for testing):
# API_BASE_URL=https://abc123.ngrok.io

# =============================================================================
# üìñ USAGE EXAMPLES FOR DIFFERENT ENVIRONMENTS
# =============================================================================

# DEVELOPMENT ENVIRONMENT:
# API_KEY=
# ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
# DEBUG=true
# LOG_LEVEL=DEBUG

# PRODUCTION ENVIRONMENT:
# API_KEY=super-secure-random-key-here
# ALLOWED_ORIGINS=https://yourdomain.com
# DEBUG=false
# LOG_LEVEL=INFO

# TESTING ENVIRONMENT:
# API_KEY=
# ALLOWED_ORIGINS=*
# DEBUG=false
# LOG_LEVEL=WARNING
